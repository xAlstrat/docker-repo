worker_processes auto;
pid /tmp/nginx.pid;
daemon off;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log off;
    error_log off;

    sendfile on;
    keepalive_timeout 65;
    keepalive_disable msie6;
    keepalive_requests 100;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;

    gzip off;

    upstream registry {
        server 127.0.0.1:5000;
    }

    server {
        listen 80 default_server;
        server_name localhost;
        client_max_body_size 1024M;

        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root /etc/letsencrypt/webrootauth;
            expires 0;
        }

        location ^~ / {
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
              return 404;
            }
            proxy_pass https://registry/;
            proxy_set_header  Host              $http_host;   # required for docker client's sake
            proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_read_timeout                  900;
        }

        # location / {
        #     return 301 https://$server_name$request_uri;
        # }
    }

    server {
        listen 443 ssl;
        server_name localhost;
        client_max_body_size 2000M;

        ssl_certificate     /etc/letsencrypt/live/localhost/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/localhost/privkey.pem;


        location ^~ / {
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
              return 404;
            }
            proxy_pass http://registry/;
            proxy_set_header  Host              $http_host;   # required for docker client's sake
            proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_read_timeout                  900;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}